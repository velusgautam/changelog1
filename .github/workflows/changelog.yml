# This workflow will read the PR to master branch and update the CHANGELOG.md file
# It reads the PR title and body and link any Jira Ticket form the jira keys.
# Then it pulls the latest CHANGELOG.md from master and append it with new body from PR
# Then it creates a new commit to the REF Branch where PR is made.

name: CHANGELOG

on:
  pull_request:
  # types: [opened, edited]
  # branches:
  #    - main
  # issue_comment:
  #  types: [created]
jobs:
  create-changelog:
    name: Changelog based on release PR
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/checkout@v2
      - name: Get git logg diff
        id: merges
        shell: bash
        env:
          ACTIONS_STEP_DEBUG: true
        run: |
          diff=hello
          echo "::set-output name=logdiff::$diff"

      - name: Using github scripts
        uses: actions/github-script@v4

        id: create-change-log
        with:
          script: |
            const myInput = core.getInput('logdiff');
            const action_fruit = core.getInput('action_fruit');
            console.log("=========meregedCommits=========");
            console.log(myInput);
            console.log(action_fruit);
            console.log("=========meregedCommits=========");

            console.log("context.eventName");
            console.log(context.eventName);
            const diff_url = context.payload.pull_request.diff_url;
            const result = await github.request(diff_url);
            console.log("===result===");
            console.log(result);

            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              title: context.payload.pull_request.title,
              body: `
              # HELLO NEW BODY
              `
            };

            const response = await github.pulls.update(request);

            core.info(`Response: ${response.status}`);
            if (response.status !== 200) {
              core.error('Updating the pull request has failed');
            }

            const payload = JSON.stringify(context.payload, undefined, 2)
            console.log(`The event payload: ${payload}`);

            core.setOutput('changelog', '');

      - uses: actions/checkout@v2
      - name: Create changelog commit
        if: ${{ steps.create-change-log.outputs.changelog != '' }}
        run: |
          git fetch origin $GITHUB_BASE_REF:$GITHUB_BASE_REF $GITHUB_HEAD_REF:$GITHUB_HEAD_REF
          git switch $GITHUB_HEAD_REF
          git checkout $GITHUB_BASE_REF CHANGELOG.md
          echo "${{steps.create-change-log.outputs.changelog}}" >> CHANGELOG.md
          git add CHANGELOG.md
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m "Changelog Commit"
          git push --set-upstream origin $GITHUB_HEAD_REF --no-verify
