# This workflow will SET the PR body based on merge commit diff
# It reads the PR title, body then it links the Jira Ticket form the jira keys.
# Then it pulls the latest CHANGELOG.md from master and append it with new changes from PR
# Then it commits CHANGELOG.md to the REFERENCE Branch in the PR.

name: CHANGELOG

on:
  pull_request:
    types: [opened, reopened, edited]
    branches: [main]

jobs:
  create-changelog:
    name: Changelog based on release PR
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACTION_TOKEN }}
      - name: Get git logg diff
        id: merges
        shell: bash
        if: github.event.action == 'reopened' || github.event.action == 'opened'
        run: |
          git fetch origin $GITHUB_BASE_REF:$GITHUB_BASE_REF $GITHUB_HEAD_REF:$GITHUB_HEAD_REF
          diff=$(git log $GITHUB_BASE_REF..$GITHUB_HEAD_REF --merges --pretty=format:"- %b||%aN||%s-eol-" | sed '/^\s*$/d')
          echo "$diff"
          echo "::set-output name=logdiff::"$diff""

      - name: Using git log to generate Release PR
        uses: actions/github-script@v4
        id: create-change-log
        env:
          LOGS: ${{ steps.merge-log.outputs.logdiff }}
        with:
          script: |
            const fr_regex = /fr-\d+/gi;
            const tsourceBranch = context.payload.pull_request.head.ref;
            console.log(tsourceBranch);
            console.log("--------------------")
            let releaseTicket = "release/fr-16101-2021-06-21".match(fr_regex);
            releaseTicket = releaseTicket !== null ? releaseTicket[0].toUpperCase() : "";
            console.log(releaseTicket);
            const today = new Date();
            const dd = String(today.getDate()).padStart(2, '0');
            const mm = String(today.getMonth() + 1).padStart(2, '0');
            const yyyy = today.getFullYear();
            const title = `${releaseTicket} Release ${yyyy}-${mm}-${dd}`;
            console.log("--------------------")
            
            console.log(`Title: ${title}`);
            const jira_base = 'https://discoveryinc.atlassian.net/browse/';
            
            
            console.log(JSON.stringify(context.payload.pull_request.head.repo.html_url));
            

            const isNewRelease =
              context.payload.action === 'opened' || context.payload.action === 'reopened';
              
              
            var pr_reg = /#\d+/g;
            
            var text = `- [apac, legal] enable brand and main territory code||Anton Westman||Merge pull request #3598 from sbs-discovery-sweden/enable-brand-and-main-territory-on-term-kinds-in-apac-eol-
              - [FR-15131] Change tab icon color for content in Site builder||Marcus Hansson||Merge pull request #3596 from sbs-discovery-sweden/feature/fr-15131-change-tab-color-on-a-collection-that-is-a-draft-eol-
              - [LAB-722] Add Jira issue field to experiment page||Max Davidson||Merge pull request #3581 from sbs-discovery-sweden/feature/lab-722-add-jira-issue-field-on-experiment-page-eol-
              - [FR-14489] Ordering by username in users table||Velu S Gautam||Merge pull request #3595 from sbs-discovery-sweden/feature/FR-14489-ordering-users-table-by-username-eol-
              - [FR-15564] InfoPanel dropdown breaks table design in Channels||Mikael Ek||Merge pull request #3582 from sbs-discovery-sweden/feature/FR-15564-infopanel-dropdown-breaks-table-design-in-channels-eol-
              - Sync Master||Velu S Gautam||Merge pull request #3593 from sbs-discovery-sweden/sync-master-eol-
              - [FR-16122] Duplicate link entity data attributes||Max Davidson||Merge pull request #3590 from sbs-discovery-sweden/feature/fr-16122-duplicate-link-entity-data-attributes-eol-
              - [FR-16081] Exclude DOM from test errors||Sebastian Nordqvist||Merge pull request #3584 from sbs-discovery-sweden/feature/fr-16081-exclude-dom-from-test-errors-eol-
              - [FR-16123] Avoid empty error details||Max Davidson||Merge pull request #3591 from sbs-discovery-sweden/bugfix/fr-16123-avoid-empty-error-details-eol-
              - [FR-15802] Warn saving capability definition with playable segments not also listable||LeoDanielsson||Merge pull request #3566 from sbs-discovery-sweden/feature/FR-15802-warn-saving-capdef-with-playable-packages-not-also-listable-eol-
              - ||Leo Danielsson||Merge branch 'develop' into feature/FR-15802-warn-saving-capdef-with-playable-packages-not-also-listable-eol-`;
            
            const body = text.slice(0,-4)
            .split("-eol-")
            .filter(commit => !commit.startsWith("\n- ||"))
            .map(commit => {
                let [message, name, subject] = commit.split("||");
                console.log(message);
                console.log(name);
                let prNumber = subject.match(pr_reg);
                console.log(prNumber);
                prNumber = prNumber !== null ? prNumber[0] : "";
                if(prNumber !== ""){
                    prNumber = `[${prNumber}](${context.payload.pull_request.head.repo.html_url}/pulls/${prNumber.replace('#', '')})`;
                }
                return `${message} | ${name} | ${prNumber}`;
            }).join("\n")

            core.info(`MERGE DIFF BODY DATA: ${body}`);

            let releaseBody = body
              .replace(/- -eol-/g, '')
              .trim()
              .replace(/-eol-/g, '\n')
              .replace(/"/g, "'");
              
            const requestBody = `
            ${releaseBody}
            `;

            core.info(`RELEASE PR BODY DATA: ${releaseBody}`);

            if (isNewRelease) {
              const request = {
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                title: isNewRelease ? title : context.payload.pull_request.title,
                body: requestBody,
              };
              const response = await github.pulls.update(request);
              if (response.status === 200) {
                core.info(`UPDATE PR BODY: Success`);
              } else {
                core.error('UPDATE PR BODY: Failed');
              }
            }

            if (!releaseBody.includes(jira_base)) {
              releaseBody = releaseBody.replace(
                fr_regex,
                (jira_key) => `[${jira_key}](${jira_base}${jira_key})`
              );
            }

            core.info(`RELEASE CHANGELOG BODY DATA: ${releaseBody}`);

            const releaseLog = `
            ## ${title}

            ${releaseBody}
            `;

            core.setOutput('changelog', releaseLog);

      - name: Create changelog commit
        run: |
          git fetch origin $GITHUB_BASE_REF:$GITHUB_BASE_REF $GITHUB_HEAD_REF:$GITHUB_HEAD_REF
          git switch $GITHUB_HEAD_REF
          git checkout $GITHUB_BASE_REF CHANGELOG.md
          echo -e "$(head -n 1 CHANGELOG.md)${{steps.create-change-log.outputs.changelog}}$(tail -n +2  CHANGELOG.md)" > CHANGELOG.md
          git add CHANGELOG.md
          git config user.name github-actions
          git config user.email github-actions@github.com
          git diff-index --quiet HEAD || git commit -m "Changelog Commit"
          git push --set-upstream origin $GITHUB_HEAD_REF --no-verify
